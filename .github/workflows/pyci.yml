name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies with uv
        run: uv pip install .[dev] # Install package + development dependencies

      - name: Run Ruff linter
        run: ruff check . # Check current directory

      - name: Run Pytest
        run: pytest --cov=hexlet_code --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: build # Dependency on success of 'build' job
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install SonarScanner
        run: |
          wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.2.0.5079-linux-x64.zip
          unzip -q sonar-scanner-cli-7.2.0.5079-linux-x64.zip
          echo "$PWD/sonar-scanner-7.2.0.5079-linux-x64/bin" >> $GITHUB_PATH

      - name: Run SonarQube analysis
        uses: SonarSource/sonarqube-scan-action@v6
        with:
          organization: IDarhanI # Replace with your SonarCloud organization key
          projectKey: IDarhanI_python-project-50 # Replace with your SonarCloud project key
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}