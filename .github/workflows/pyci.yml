name: Python CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install UV
      uses: astral-sh/setup-uv@v1
      with:
        uv-version: 0.1.0 
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run tests with coverage
      run: uv run pytest --cov=hexlet_code --cov-report=xml --cov-report=term-missing -v

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install UV
      uses: astral-sh/setup-uv@v1
      with:
        uv-version: 0.1.0 
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run Ruff linter
      run: uv run ruff check

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install UV
      uses: astral-sh/setup-uv@v1
      with:
        uv-version: 0.1.0 
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run tests with coverage for SonarQube
      run: uv run pytest --cov=hexlet_code --cov-report=xml
    
    - name: Setup SonarScanner
      run: |
        wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux.zip
        unzip -q sonar-scanner-cli-6.2.1.4610-linux.zip
        echo "$PWD/sonar-scanner-6.2.1.4610-linux/bin" >> $GITHUB_PATH
    
    - name: Run SonarScanner
      run: |
        sonar-scanner \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.projectKey=denisov-dv_hexlet-code \
          -Dsonar.sources=hexlet_code \
          -Dsonar.python.coverage.reportPaths=coverage.xml
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}